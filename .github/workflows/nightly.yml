name: Nightly

on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-python-unit-tests:
    runs-on: mi-250
    strategy:
      fail-fast: false
      matrix:
        rocm-version: ["7.0.0", "7.1.0"]
        ubuntu-version: ["22", "24"]
    outputs:
      jax-sha: ${{ steps.get-jax-sha.outputs.sha }}
    steps:
      - name: Change owners for cleanup
        run: |
          docker run --rm -v "./:/rocm-jax" ubuntu \
            /bin/bash -c "shopt -s dotglob; chown -R $UID /rocm-jax/* || true"
      - name: Checkout plugin repo
        uses: actions/checkout@v4
      - name: Checkout JAX repo
        uses: actions/checkout@v4
        with:
          # TODO: Load the ref from a file that sets the min and max JAX version
          # TODO: Change the repo and ref once we figure out how exactly we're going to
          #       manage tests
          repository: rocm/jax
          ref: rocm-jaxlib-v0.7.1
          path: jax
      - name: Get JAX commit SHA
        id: get-jax-sha
        run: echo "sha=$(git -C jax rev-parse HEAD)" >> "GITHUB_OUTPUT"
  upload-test-to-db:
    needs: run-python-unit-tests
    runs-on: mysqldb
    strategy:
      fail-fast: false
      matrix:
        rocm-version: ["7.0.0", "7.1.0"]
        ubuntu-version: ["22", "24"]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4
      - name: Download logs from artifact (per-matrix)
        uses: actions/download-artifact@v4
        with:
          run-id: 17982438023 
          name: logs-${{ matrix.ubuntu-version }}_${{ matrix.rocm-version }}
          path: logs-${{ matrix.ubuntu-version }}_${{ matrix.rocm-version }}
      - name: Upload logs to MySQL database
        env:
          ROCM_JAX_DB_HOSTNAME: ${{ secrets.ROCM_JAX_DB_HOSTNAME }}
          ROCM_JAX_DB_USERNAME: ${{ secrets.ROCM_JAX_DB_USERNAME }}
          ROCM_JAX_DB_PASSWORD: ${{ secrets.ROCM_JAX_DB_PASSWORD }}
          ROCM_JAX_DB_NAME: ${{ secrets.ROCM_JAX_DB_NAME }}
          ROCM_VERSION: ${{ matrix.rocm-version }}
          UBUNTU_VERSION: ${{ matrix.ubuntu-version }}
          LOGS_DIR: logs-${{ matrix.ubuntu-version }}_${{ matrix.rocm-version }}
          JAX_COMMIT_SHA: ${{ needs.run-python-unit-tests.outputs.jax-sha }}
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install mysql-connector-python

          python ci/upload_test_to_db.py \
          --logs_dir "$LOGS_DIR" \
          --run-tag "ci-run" \
          --runner-label "MI250" \
          --ubuntu-version "${UBUNTU_VERSION}" \
          --rocm-version "${ROCM_VERSION//.}" \
          --commit-sha "${{ github.sha }}" \
          --jax-commit-sha "${JAX-COMMIT-SHA}" \
          --build-num "${{ matrix.rocm-build-num || 0 }}" \
          --github-run-id "${{ github.run_id }}"
