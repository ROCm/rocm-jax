name: Nightly

on:
  schedule:
    - cron: "0 1 * * *"
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  run-python-unit-tests:
    runs-on: mi-250
    strategy:
      fail-fast: false
      matrix:
        rocm-version: ["6.4.1"]
        ubuntu-version: ["22"]
    steps:
      - name: Change owners for cleanup
        run: |
          docker run --rm -v "./:/rocm-jax" ubuntu /bin/bash -c "chown -R $UID /rocm-jax/* || true"
      - name: Checkout plugin repo
        uses: actions/checkout@v4
      - name: Checkout JAX repo
        uses: actions/checkout@v4
        with:
          # TODO: Load the ref from a file that sets the min and max JAX version
          # TODO: Change the repo and ref once we figure out how exactly we're going to
          #       manage tests
          repository: rocm/jax
          ref: rocm-jaxlib-v0.6.0
          path: jax
      - name: Authenticate to GitHub Container Registry
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" \
            | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Compute FOLDERNAME for artifact
        id: fold
        run: |
          ROCM_VERSION="${{ matrix.rocm-version }}"
          UBUNTU_VERSION="${{ matrix.ubuntu-version }}"
          FOLDERNAME="logs_rocm${ROCM_VERSION//.}_ubu${UBUNTU_VERSION}"
          echo "foldername=$FOLDERNAME" >> $GITHUB_OUTPUT
      - name: Run tests using run_single_gpu.py + run_multi_gpu.py
        if: always()
        env:
          GPU_COUNT: "8"
          GFX: "gfx90a"
          ROCM_VERSION: ${{ matrix.rocm-version }}
          UBUNTU_VERSION: ${{ matrix.ubuntu-version }}
        run: |
          HOST_LOGS_DIR="jax/${{ steps.fold.outputs.foldername }}"
          CONT_LOGS_DIR="/jax/${{ steps.fold.outputs.foldername }}"

          python3 build/ci_build test \
            "ghcr.io/rocm/jax-ubu${UBUNTU_VERSION}.rocm${ROCM_VERSION//.}:87d07eea0b415de6a30d8b1fcc4ec2dbef257c2a" \
            --test-cmd "python build/rocm/run_single_gpu.py -c 2>&1 | tee ut.log"
      - name: Rename logs dir (per-matrix)
        run: |
          mv jax/logs jax/${{ steps.fold.outputs.foldername }}
          rm -rf jax/logs
      - name: Upload logs artifact (per-matrix)
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.fold.outputs.foldername }}
          path: jax/${{ steps.fold.outputs.foldername }}/
  upload-test-to-db:
    needs: run-python-unit-tests
    runs-on: mysqldb
    strategy:
      fail-fast: false
      matrix:
        rocm-version: ["6.4.1"]
        ubuntu-version: ["22"]
    steps:
      - name: Checkout source
        uses: actions/checkout@v4

      - name: Compute FOLDERNAME for artifact
        id: fold2
        run: |
          ROCM_VERSION="${{ matrix.rocm-version }}"
          UBUNTU_VERSION="${{ matrix.ubuntu-version }}"
          FOLDERNAME="logs_rocm${ROCM_VERSION//.}_ubu${UBUNTU_VERSION}"
          echo "foldername=$FOLDERNAME" >> $GITHUB_OUTPUT

      - name: Download training summary artifact
        uses: actions/download-artifact@v4
        with:
          name: ${{ steps.fold2.outputs.foldername }}
          path: ${{ steps.fold2.outputs.foldername }}

      - name: Upload logs to MySQL database
        env:
          ROCM_JAX_DB_HOSTNAME: ${{ secrets.ROCM_JAX_DB_HOSTNAME }}
          ROCM_JAX_DB_USERNAME: ${{ secrets.ROCM_JAX_DB_USERNAME }}
          ROCM_JAX_DB_PASSWORD: ${{ secrets.ROCM_JAX_DB_PASSWORD }}
          ROCM_JAX_DB_NAME: ${{ secrets.ROCM_JAX_DB_NAME }}
          ROCM_VERSION: ${{ matrix.rocm-version }}
          UBUNTU_VERSION: ${{ matrix.ubuntu-version }}
          LOGS_DIR: ${{ steps.fold2.outputs.foldername }}
        run: |
          python3 -m venv venv
          source venv/bin/activate
          pip install --upgrade pip
          pip install mysql-connector-python

          python ci/upload_test_to_db.py \
          --logs_dir "$LOGS_DIR" \
          --run-tag "ci-run" \
          --runner-label "MI250" \
          --ubuntu-version "${UBUNTU_VERSION}" \
          --rocm-version "${ROCM_VERSION//.}" \
          --commit-sha "${{ github.sha }}" \
          --build-num "16306" \
          --github-run-id "${{ github.run_id }}"
